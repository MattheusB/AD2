knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(caret)
library(dplyr)
library(lars)
library(ggplot2)
treino <- read.csv("~/Downloads/AD2/Lab03/train.csv", encoding = "latin1")
teste <- read.csv("~/Downloads/AD2/Lab03/test.csv", encoding = "latin1")
treino <- treino %>%
select(-c(cargo, nome))
teste <- teste %>%
select(-c(cargo, nome))
treino[is.na(treino)] <- 0
teste[is.na(teste)] <- 0
View(treino)
controleFit <- trainControl(method = "cv",
number = 20,
repeats = 20)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.1))
valoresPreProcessados <- c("center", "scale", "nzv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(caret)
library(dplyr)
library(lars)
library(ggplot2)
treino <- read.csv("~/Downloads/AD2/Lab03/train.csv", encoding = "latin1")
teste <- read.csv("~/Downloads/AD2/Lab03/test.csv", encoding = "latin1")
treino <- treino %>%
select(-c(cargo, nome))
teste <- teste %>%
select(-c(cargo, nome))
treino[is.na(treino)] <- 0
teste[is.na(teste)] <- 0
controleFit <- trainControl(method = "cv",
number = 20,
repeats = 20)
valoresPreProcessados <- c("center", "scale", "nzv")
modeloRidge <- train(votos ~ .,
data = treino,
trControl = controleFit,
method = "ridge",
preProcess = valoresPreProcessados,
tuneLength = 15)
modeloRidge
predicaoRidge <- predict(modeloRidge)
dadosRidge <- data.frame(pred = predicaoRidge, obs = treino$votos)
ridge <- round(defaultSummary(dadosRidge), digits = 4)
ridge
modeloLasso <- train(votos ~ .,
data = treino,
trControl = controleFit,
method = "lasso",
preProcess = valoresPreProcessados,
tuneLength = 14)
modeloLasso
modeloKNN <- train(votos ~ .,
data = treino,
trControl = controleFit,
method = "knn",
preProcess = valoresPreProcessados,
tuneLength = 15)
modeloKNN
plot(modeloRidge, xlab = "Lambda", ylab = "RMSE")
plot(modeloLasso, xlab = "Lambda", ylab = "RMSE")
plot(modeloKNN, ylab = "RMSE")
ggplot(varImp(modeloRidge))
ggplot(varImp(modeloLasso))
ggplot(varImp(modeloKNN))
treinoK <- treino %>% select (-ano, -recursos_de_outros_candidatos.comites, -recursos_proprios, -media_despesa)
testeK <- teste %>% select (-ano, -recursos_de_outros_candidatos.comites, -recursos_proprios, -media_despesa)
grid <- expand.grid(k = modeloKNN$bestTune)
controle <- trainControl(method = "optimism_boot")
modeloKNNCV <- train(votos ~ .,
data = treinoK,
method = "knn",
tuneGrid = grid,
trControl = controle,
preProcess = valoresPreProcessados)
modeloKNNCV
modeloKNNCV$xlevels[["ocupacao"]] <- union(modeloKNNCV$xlevels[["ocupacao"]], levels(testeK$ocupacao))
predicao <- predict(modeloKNNCV, testeK)
ID <- testeK %>%
select(sequencial_candidato)
colnames(ID)[colnames(ID)=="sequencial_candidato"] <- "ID"
arquivoCSV <- ID
arquivoCSV$votos <- predicao
arquivoCSV$votos[arquivoCSV$votos < 0] <- 0
write.csv(arquivoCSV, "sample_submission.csv", row.names=FALSE)
